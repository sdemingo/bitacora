#!/usr/bin/env python3

import sys
import os
import grp
import random
import re
import shutil
from string import Template
from datetime import datetime
from pathlib import Path


USR_ROOT="./usrtest"      # markdown dratf files (must be /home)
DEBUG_MODE=True
USER=os.getlogin()
ZINE_ADMIN_GROUP_NAME="zineadm"
MD_TEMPLATE="""> Borrador: no publicar todavía

# Título de tu artículo

Texto de tu artículo
"""

def debug(error):
    if DEBUG_MODE: print(err)


#
# Extrae el título de un artículo en markdown
#
def extractTitleFromMD(mdcontent):
    regex = r"^# (.+)"
    test_str=mdcontent
    matches = re.search(regex, test_str, re.MULTILINE)
    return matches.groups()[0]

#
# Crea una fecha aleatoria en formato string
#
def createRandomDateString():
    randay=str(random.randrange(1,27)).zfill(2)
    randmonth=str(random.randrange(1,12)).zfill(2)
    randyear=str(random.randrange(2017,2022))
    return randyear+randmonth+randay

#
# Retorna un objeto fecha a partir de un string
# con la forma DDMMYYYY
#
def getDateFromString(datestr):
    return datetime.strptime(datestr,"%Y%m%d")


#
# Muestra el índice de artículos publicados por
# un usuario. El nombre del fichero y el título
#
def showIndexFromUser():
    files=os.listdir(USR_ROOT+"/"+USER+"/blog")
    files.sort(reverse=True)
    print ("Archivo\t\tTítulo del artículo")
    print ("=======\t\t===================")
    for filename in files:
        if (filename=="img"):
            continue

        filecontent=Path(USR_ROOT+"/"+USER+"/blog/"+filename).read_text()
        title = extractTitleFromMD(filecontent)
        print ("{file}\t{title}".format(file=filename, title=title))



#
# Crea un fichero en blanco a partir de una plantilla
# guardada en el string POST_TEMPLATE
#
def createNewPost():
    now=datetime.now()
    dir=os.environ.get("HOME")+"/blog"
    os.system("mkdir -p "+dir)
    filename=now.strftime("%Y%m%d.md")
    ## El fichero debe tener permisos 664 y su grupo debe ser zineadm
    with open(dir+"/"+filename,"w") as f:
        f.write(MD_TEMPLATE)
        f.close()
    



if __name__=='__main__':

    try:
        grp.getgrnam(ZINE_ADMIN_GROUP_NAME)
    except KeyError:
        print("El grupo "+ZINE_ADMIN_GROUP_NAME+" no existe y debería estar presente. Consulte este problema con el administrador")
        sys.exit(0)

    if len(sys.argv)<2:
        print ("\t\t zine [ --list | --new ] ")
        sys.exit(0)

    if sys.argv[1]=="--list":
        showIndexFromUser()


    if sys.argv[1]=="--new":
        createNewPost()
