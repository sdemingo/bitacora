#!/usr/bin/env python3

import sys
import os
import random
import re
import shutil
from string import Template
from datetime import datetime
from pathlib import Path

## Directorio donde encontrar los artículos en borrador
USR_ROOT="/var/publico"

## Lugar del SF donde están los artículos aceptados y listos para publicar
ZINE_REPO="/var/agora" 


ACCEPTED_DIR=ZINE_REPO+"/users"    
DEBUG_MODE=True
USER=os.environ.get("USER")
ZINE_ADMIN_GROUP_NAME="zineadm"
MD_TEMPLATE="""@+BORRADOR

# Título de tu artículo

Texto de tu artículo
"""

def debug(error):
    if DEBUG_MODE: print(err)


#
# Extrae el título de un artículo en markdown
#
def extractTitleFromMD(mdcontent):
    regex = r"^# (.+)"
    test_str=mdcontent
    matches = re.search(regex, test_str, re.MULTILINE)
    return matches.groups()[0]


#
# Retorna un objeto fecha a partir de un string
# con la forma DDMMYYYY
#
def getDateFromString(datestr):
    return datetime.strptime(datestr,"%Y%m%d")


#
# Muestra el índice de artículos publicados por
# un usuario. El nombre del fichero y el título
#
def showIndexFromUser():
    files=os.listdir(USR_ROOT+"/"+USER+"/blog")
    files.sort(reverse=True)
    print ("\tArchivo\t\tTítulo del artículo")
    print ("\t=======\t\t===================\n")
    for filename in files:
        if (filename=="img"):
            continue

        filecontent=Path(USR_ROOT+"/"+USER+"/blog/"+filename).read_text()
        title = extractTitleFromMD(filecontent)
        print ("\t{file}\t{title}".format(file=filename, title=title))



#
# Crea un fichero en blanco a partir de una plantilla
# guardada en el string POST_TEMPLATE
#
def createNewPost():
    now=datetime.now()
    dir=USR_ROOT+"/"+USER+"/blog"
    if not os.path.exists(dir):
        os.system("mkdir -p "+dir)
        
    filename=now.strftime("%Y%m%d.md")
    with open(dir+"/"+filename,"w") as f:
        f.write(MD_TEMPLATE)
        f.close()
        
    print ("Se ha creado el fichero "+filename+". Usa nano u otro editor para escribirlo")
    print ("\nEjecuta: nano /home/"+USER+"/pub/blog/"+filename+"\n")
    

def showStat():
    print ("\tEstado de tus últimos artículos y comentarios del moderador")
    print ("\t===========================================================\n")
    try:
        with open(ACCEPTED_DIR+"/"+USER+"/registro.txt","r") as f:
            lineas=f.readlines()
            f.close()
        for l in lineas:
            print ("\t"+l)
        print("\n\n")

    except:
        print ("\tNo se encontro ningún artículo publicado")
        
    

if __name__=='__main__':

    if (len(sys.argv)<2) or ((sys.argv[1]!="--new") and (sys.argv[1]!="--list") and (sys.argv[1]!="--stat")):
        print ("\t\t zine [ --list | --new | --stat ] ")
        sys.exit(0)

    if sys.argv[1]=="--list":
        showIndexFromUser()

    if sys.argv[1]=="--new":
        createNewPost()

    if sys.argv[1]=="--stat":
        showStat()
